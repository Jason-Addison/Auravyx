TOP=..

CC=@CC@
CXX=@CXX@
CFLAGS=@CFLAGS@ -Wno-unused @RDYNAMIC@
DEFS=@DEFINES@
TEST_PROGS=testreverb testda testmulti testalut testtime  \
           testmultialut testalinitexit                 \
	   testsingle testnothread \
	   testmultinothread testpitch testdoppler 		 \
	   testsourcestop 	    testext teststream \
	   testcallback testorient testrelative testchannel     \
	   testpause \
	   testpitchnothread testpitch2 testpitchnothread2 \
	   testgain testchannel2 testloop testlistener testbufferuniq    \
	   testsourceuniq testgendelbuffer_error testgendelsource_error        \
	   testmultichannel testlistener2 testlistener3      \
	   testlistener4 testmp3 testvorbis testgainlinear \
	   testmultimp3 testpitch3 testpitch4 testqueue testqueue2       \
	   testqueue3 testcapture testcapture2 testmp32 testleak testmulticontext      \
	   testleak2 testmulticontext2 teststartstop testdevice \
	   teststrings testcpp testattributes

INC=-I../src -I../include -I../../include -I../audioconvert -I.. @INCLUDES@
LIBOPENAL=../src/libopenal.a
LIBS=-lalut testlib.o -L../src $(LIBOPENAL) @LIBS@

SUBDIRS :=
RM_RF := $(RM) -r
CLEAN_FILES := testlib.o $(TEST_PROGS)
DISTCLEAN_FILES := Makefile
MAINTAINER_CLEAN_FILES :=
REPO_CLEAN_FILES :=

% : %.c ../config.h testlib.o
	$(CC) $(INC) $(DEFS) $(CFLAGS) $< -o $@ $(LIBS)

% : %.cc ../config.h testlib.o
	$(CXX) $(INC) $(DEFS) $(filter-out -Wbad-function-cast -Wmissing-declarations -Wimplicit-function-declaration,$(CFLAGS)) $< -o $@ $(LIBS)

all: testlib.o $(LIBOPENAL) $(TEST_PROGS) ../src/libopenal.a

# Note that we do *not* indent testlib.h automatically, the 'extern "C"' stuff
# in it would lead to more indentation than we want.
indent:
	@for i in *.c *.cc ; do \
	    cat $$i | ( cd $(TOP) ; indent ) > indent.tmp ; \
	    if diff $$i indent.tmp > /dev/null 2>&1 ; then \
		: ; \
	    else \
		echo Reformatted $$i ; \
		$(RM) $$i ; \
		mv indent.tmp $$i ; \
	    fi ; \
	done
	@$(RM) indent.tmp

testlib.o : testlib.c testlib.h ../config.h
	$(CC) $(INC) $(DEFS) $(CFLAGS) -c testlib.c -o testlib.o

libopenal: $(LIBOPENAL)

$(LIBOPENAL):
	(cd ../src && make all)

clean:
	for i in "" $(SUBDIRS) ; do test -z "$$i" || ( cd $$i && $(MAKE) clean ) done
	$(RM_RF) __rm_food $(CLEAN_FILES)

distclean:
	for i in "" $(SUBDIRS) ; do test -z "$$i" || ( cd $$i && $(MAKE) distclean ) done
	$(RM_RF) __rm_food $(CLEAN_FILES) $(DISTCLEAN_FILES)

maintainer-clean:
	for i in "" $(SUBDIRS) ; do test -z "$$i" || ( cd $$i && $(MAKE) maintainer-clean ) done
	$(RM_RF) __rm_food $(CLEAN_FILES) $(DISTCLEAN_FILES) $(MAINTAINER_CLEAN_FILES)

repo-clean:
	for i in "" $(SUBDIRS) ; do test -z "$$i" || ( cd $$i && $(MAKE) repo-clean ) done
	$(RM_RF) __rm_food $(CLEAN_FILES) $(DISTCLEAN_FILES) $(MAINTAINER_CLEAN_FILES) $(REPO_CLEAN_FILES)

.PHONY: all indent clean distclean maintainer-clean repo-clean
